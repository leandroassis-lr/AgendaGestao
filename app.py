import streamlit as st
import pandas as pd
from datetime import date
from utils import (
    carregar_projetos_db,
    adicionar_projeto_db,
    atualizar_projeto_db,
    excluir_projeto_db,
    carregar_config,
    get_status_color,
    calcular_sla,
    load_css
)

# ==========================================================
# 1. CONFIGURA√á√ÉO INICIAL
# ==========================================================
st.set_page_config(page_title="Agenda de Projetos", page_icon="üìã", layout="wide")
load_css()

st.title("üìã Agenda de Projetos")

# ==========================================================
# 2. CONTROLE DE ESTADO
# ==========================================================
if "view" not in st.session_state:
    st.session_state.view = "listar"
if "selected_id" not in st.session_state:
    st.session_state.selected_id = None

# ==========================================================
# 3. FUN√á√ïES DE FLUXO (CORRIGIDAS)
# ==========================================================
def voltar_para_lista():
    st.session_state.view = "listar"
    st.session_state.selected_id = None
    # st.rerun() # REMOVIDO

def abrir_formulario_novo():
    st.session_state.view = "novo"
    st.session_state.selected_id = None
    # st.rerun() # REMOVIDO

def abrir_formulario_edicao(projeto_id):
    st.session_state.view = "editar"
    st.session_state.selected_id = projeto_id
    # st.rerun() # REMOVIDO

# ==========================================================
# 4. VISUALIZA√á√ÉO: LISTA DE PROJETOS (CORRIGIDA)
# ==========================================================
if st.session_state.view == "listar":
    st.markdown("### üìë Lista de Projetos")

    df = carregar_projetos_db()
    if df.empty:
        st.info("Nenhum projeto cadastrado ainda.")
    else:
        df_display = df.copy()
        df_display["SLA"], df_display["Cor SLA"] = zip(*df_display.apply(
            lambda r: calcular_sla(r, carregar_config("sla")), axis=1))

        for idx, row in df_display.iterrows():
            cor_status = get_status_color(row.get("Status", ""))
            cor_sla = row["Cor SLA"]

            with st.container():
                cols = st.columns([3, 3, 3, 3, 1, 1])
                cols[0].markdown(f"**{row.get('Projeto', '')}**")
                cols[1].markdown(f"üè¶ {row.get('Ag√™ncia', '')}")
                cols[2].markdown(f"üë∑ {row.get('T√©cnico', '')}")
                cols[3].markdown(f"<span style='color:{cor_status}'>{row.get('Status', '')}</span>", unsafe_allow_html=True)
                cols[4].markdown(f"<span style='color:{cor_sla}'>{row['SLA']}</span>", unsafe_allow_html=True)
                with cols[5]:
                    if st.button("‚úèÔ∏è", key=f"edit_{row['ID']}"):
                        abrir_formulario_edicao(row["ID"])
                        st.rerun() # Adicionar rerun AQUI, fora do callback, √© seguro.
                    
                    if st.button("üóëÔ∏è", key=f"del_{row['ID']}"):
                        if excluir_projeto_db(row["ID"]):
                            st.success("Projeto exclu√≠do com sucesso!")
                            # st.rerun() # REMOVIDO - O rerun do success/info j√° √© suficiente
                        else:
                            st.error("Erro ao excluir o projeto.")
                        st.rerun() # For√ßa a atualiza√ß√£o da lista ap√≥s a tentativa de exclus√£o


    st.divider()

    st.button("‚ûï Novo Projeto", on_click=abrir_formulario_novo)

# ==========================================================
# 5. VISUALIZA√á√ÉO: FORMUL√ÅRIO (NOVO / EDITAR) (CORRIGIDO)
# ==========================================================
else: # if st.session_state.view == "novo" or st.session_state.view == "editar":
    editar = st.session_state.view == "editar"
    projeto_atual = None
    if editar and st.session_state.selected_id:
        df = carregar_projetos_db()
        # Garante que estamos pegando a linha certa e tratando o caso de n√£o encontrar
        projeto_df = df[df["ID"] == st.session_state.selected_id]
        if not projeto_df.empty:
            projeto_atual = projeto_df.to_dict(orient="records")[0]
        else:
            st.error("ID do projeto n√£o encontrado. Voltando para a lista.")
            voltar_para_lista()
            st.rerun() # Necess√°rio para efetivar a volta

    st.markdown("### üìù " + ("Editar Projeto" if editar else "Novo Projeto"))

    with st.form(key="form_projeto"):
        # Se√ß√£o de inputs do formul√°rio (sem altera√ß√µes)
        col1, col2 = st.columns(2)
        nome = col1.text_input("Nome do Projeto", value=projeto_atual.get("Projeto", "") if projeto_atual else "")
        agencia = col2.text_input("Ag√™ncia", value=projeto_atual.get("Ag√™ncia", "") if projeto_atual else "")
        tecnico = col1.text_input("T√©cnico", value=projeto_atual.get("T√©cnico", "") if projeto_atual else "")
        
        status_options = ["N√£o iniciado", "Em andamento", "Finalizado", "Pausado", "Cancelado"]
        current_status = projeto_atual.get("Status", "N√£o iniciado") if projeto_atual else "N√£o iniciado"
        status_index = status_options.index(current_status) if current_status in status_options else 0
        status = col2.selectbox("Status", status_options, index=status_index)
        
        agendamento_val = pd.to_datetime(projeto_atual.get("Agendamento", date.today())).date() if projeto_atual else date.today()
        agendamento = col1.date_input("Agendamento", value=agendamento_val)
        
        abertura_val = pd.to_datetime(projeto_atual.get("Data de Abertura", date.today())).date() if projeto_atual else date.today()
        abertura = col2.date_input("Data de Abertura", value=abertura_val)

        # Tratar data de finaliza√ß√£o que pode n√£o existir
        finalizacao_val = projeto_atual.get("Data de Finaliza√ß√£o")
        if pd.notna(finalizacao_val):
            finalizacao_val = pd.to_datetime(finalizacao_val).date()
        else:
            finalizacao_val = None # Usar None para permitir campo vazio
        finalizacao = col1.date_input("Data de Finaliza√ß√£o", value=finalizacao_val)

        observacao = st.text_area("Observa√ß√£o", value=projeto_atual.get("Observa√ß√£o", "") if projeto_atual else "")

        submitted = st.form_submit_button("üíæ Salvar")

    if submitted:
        dados = {
            "Projeto": nome,
            "Ag√™ncia": agencia,
            "T√©cnico": tecnico,
            "Status": status,
            "Agendamento": str(agendamento),
            "Data de Abertura": str(abertura),
            "Data de Finaliza√ß√£o": str(finalizacao) if finalizacao else None,
            "Observa√ß√£o": observacao
        }

        if editar:
            sucesso = atualizar_projeto_db(st.session_state.selected_id, dados)
        else:
            sucesso = adicionar_projeto_db(dados)

        if sucesso:
            st.success("‚úÖ Projeto salvo com sucesso!")
            st.balloons()
            voltar_para_lista()
        else:
            st.error("‚ùå Erro ao salvar o projeto.")

    st.button("‚¨ÖÔ∏è Voltar", on_click=voltar_para_lista)
